version: '3.8'

services:
  # MySQL Database (for local development)
  # Note: In production, use AWS RDS MySQL
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: FitTrackerDB
      MYSQL_USER: admin
      MYSQL_PASSWORD: Alpha*FitTracker*5
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-pAlpha*FitTracker*5"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password

  # Redis for caching (planned implementation)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Ninja Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      # Use local MySQL for development
      - DATABASE_URL=mysql://admin:Alpha*FitTracker*5@db:3306/FitTrackerDB
      # For production, use AWS RDS:
      # - DATABASE_URL=mysql://admin:Alpha*FitTracker*5@fittrackdb.ceja6aik6pl1.us-east-1.rds.amazonaws.com:3306/FitTrackerDB
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
      - JWT_ACCESS_TOKEN_LIFETIME=5
      - JWT_REFRESH_TOKEN_LIFETIME=1
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Flutter Frontend (Web)
  frontend:
    build:
      context: ./frontend/fittracker_app
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume:
